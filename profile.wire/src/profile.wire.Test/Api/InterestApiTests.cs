/*
 * TP.Profile.Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using profile.wire.Client;
using profile.wire.Api;
// uncomment below to import models
//using profile.wire.Model;

namespace profile.wire.Test.Api
{
    /// <summary>
    ///  Class for testing InterestApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InterestApiTests : IDisposable
    {
        private InterestApi instance;

        public InterestApiTests()
        {
            instance = new InterestApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InterestApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InterestApi
            //Assert.IsType<InterestApi>(instance);
        }

        /// <summary>
        /// Test InterestForceUpdateCachePost
        /// </summary>
        [Fact]
        public void InterestForceUpdateCachePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InterestForceUpdateCachePost();
            //Assert.IsType<EmptyResponse>(response);
        }

        /// <summary>
        /// Test InterestGet
        /// </summary>
        [Fact]
        public void InterestGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InterestGet();
            //Assert.IsType<List<InterestDto>>(response);
        }

        /// <summary>
        /// Test InterestPatch
        /// </summary>
        [Fact]
        public void InterestPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InterestUpdateReq? interestUpdateReq = null;
            //var response = instance.InterestPatch(interestUpdateReq);
            //Assert.IsType<EmptyResponse>(response);
        }

        /// <summary>
        /// Test InterestPost
        /// </summary>
        [Fact]
        public void InterestPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddInterestReq? addInterestReq = null;
            //var response = instance.InterestPost(addInterestReq);
            //Assert.IsType<InterestDto>(response);
        }
    }
}
