/*
 * TP.Profile.Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using profile.wire.Client;
using profile.wire.Api;
// uncomment below to import models
//using profile.wire.Model;

namespace profile.wire.Test.Api
{
    /// <summary>
    ///  Class for testing ProfileSecurityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProfileSecurityApiTests : IDisposable
    {
        private ProfileSecurityApi instance;

        public ProfileSecurityApiTests()
        {
            instance = new ProfileSecurityApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProfileSecurityApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProfileSecurityApi
            //Assert.IsType<ProfileSecurityApi>(instance);
        }

        /// <summary>
        /// Test ProfileSecurityUpdatePasswordOtpRequestPost
        /// </summary>
        [Fact]
        public void ProfileSecurityUpdatePasswordOtpRequestPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ProfileSecurityUpdatePasswordOtpRequestPost();
            //Assert.IsType<OtpForgetPasswordRes>(response);
        }

        /// <summary>
        /// Test ProfileSecurityUpdatePasswordOtpVerifyPatch
        /// </summary>
        [Fact]
        public void ProfileSecurityUpdatePasswordOtpVerifyPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ValidateOtpUpdatePasswordReq? validateOtpUpdatePasswordReq = null;
            //var response = instance.ProfileSecurityUpdatePasswordOtpVerifyPatch(validateOtpUpdatePasswordReq);
            //Assert.IsType<EmptyResponse>(response);
        }

        /// <summary>
        /// Test ProfileSecurityUpdatePasswordPatch
        /// </summary>
        [Fact]
        public void ProfileSecurityUpdatePasswordPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdatePasswordReq? updatePasswordReq = null;
            //var response = instance.ProfileSecurityUpdatePasswordPatch(updatePasswordReq);
            //Assert.IsType<EmptyResponse>(response);
        }

        /// <summary>
        /// Test ProfileSecurityUpdatePhoneRequestPost
        /// </summary>
        [Fact]
        public void ProfileSecurityUpdatePhoneRequestPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VerifyPhoneReq? verifyPhoneReq = null;
            //var response = instance.ProfileSecurityUpdatePhoneRequestPost(verifyPhoneReq);
            //Assert.IsType<VerifyPhoneRes>(response);
        }

        /// <summary>
        /// Test ProfileSecurityUpdatePhoneVerifyPatch
        /// </summary>
        [Fact]
        public void ProfileSecurityUpdatePhoneVerifyPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ValidatePhoneVerificationReq? validatePhoneVerificationReq = null;
            //var response = instance.ProfileSecurityUpdatePhoneVerifyPatch(validatePhoneVerificationReq);
            //Assert.IsType<EmptyResponse>(response);
        }
    }
}
